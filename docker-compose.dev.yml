version: '3'

services:
  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - default

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.0"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"

    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - default

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - elasticsearch
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - default

  postgres:
      image: postgres:latest
      env_file:
        - Api/.env
      environment:
        POSTGRES_USER: ${DB_USERNAME}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
        PGDATA: /data/postgres
      volumes:
        - database:/data/postgres
      ports:
        - "5432:5432"
      networks:
        - default

  redis:
    env_file:
      - Api/.env
    container_name: bloom-filter
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - default

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - default

volumes:
  rabbitmq_data:
  elasticsearch_data:
  grafana_data:
  database:

networks:
  default:
    driver: bridge
